#  Simple workflow to deploy the website to the server when a push to main occurs that changes the code/ directory contents.
#  This deploys to the gilkeidar.com domain specifically, and overwrites the current files served for it.
name: Deploy To Apache Server
run-name: Deploying to Apache Server by @${{ github.actor }}
on:
  push:
    branches:
      - 'main'
    paths:
      - 'code/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Execute script using SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          # Change ownership of public_html directory to the githubaction user.
          script: echo ${{ secrets.PASSWORD }} | sudo -S chown -R githubaction:githubaction ${{secrets.TARGET_PATH_DEFAULT}}/*
      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "code/*"
          target: ${{ secrets.TARGET_PATH_DEFAULT }}
          #  Copy the files to the target without the code/ directory (e.g., code/index.html will be copied to public_html/index.html
          #  instead of public_html/code/index.html)
          strip_components: 1
      - name: Execute script using SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          # Enter CGI script directory; ensure all .pl and .py files are
          # executable; then change ownership of public_html directory to user 
          # www-data
          script: cd ${{ secrets.SCRIPT_PATH }}; chmod a+x *.pl *.py; echo ${{ secrets.PASSWORD }} | sudo -S chown -R www-data:www-data ../*
